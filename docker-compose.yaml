name: lab2-architecture

services:

  nginx-service:
    container_name: nginx-container
    restart: unless-stopped
    image: nginx-image
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - staticfiles-volume:/static
    depends_on:
      backend-service:
        condition: service_started

  backend-service:
    image: backend-image
    container_name: backend-container
    restart: unless-stopped
    working_dir: /backend
    command: >
      sh -c "
      gunicorn lab1.wsgi:application --bind 0.0.0.0:8000
      "
    volumes:
      - staticfiles-volume:/staticfiles
    depends_on:
      postgres-service:
        condition: service_started
      backend-build-service:
        condition: service_completed_successfully

  backend-build-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend-image
    container_name: backend-build-container
    restart: no
    working_dir: /backend
    command: >
      sh -c "
      python manage.py migrate --noinput &&
      python manage.py collectstatic --noinput 
      "
    volumes:
    - staticfiles-volume:/staticfiles
    depends_on:
      postgres-service:
        condition: service_started

  postgres-service:
    container_name: postgres-container
    image: postgres:17-alpine
    restart: always
    ports:
      - 1234:5432
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1s
      timeout: 2s
      retries: 5
    volumes:
      - postgres-volume:/var/lib/postgresql/data

volumes:
  staticfiles-volume:
  postgres-volume: